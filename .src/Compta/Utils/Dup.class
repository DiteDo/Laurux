' Gambas class file

'----------------------------------------------------------------------------
'

'
'Ce programme est un logiciel libre; Vous pouvez le redistribuer et/ou
'le modifier selon les termes de la GNU General PUBLIC License publiés par
'la Free Software Foundation.

'Ce programme est distribué sans garantie. Voyez la GNU General PUBLIC
'License pour plus de details.

'Vous devez lire la GNU General PUBLIC Licence.
'Si vous ne disposez pas d'un exemplaire, veuillez écrire
'à " The Free Software Foundation
'INC, 59 Temple place - Suite 33, Boston
'MA 02111-1307 USA
'----------------------------------------------------------------------------
'################################################
'# nom du fichier           : Dup.class
'# Auteur                   : Jacky Tripoteau
'# date de création         : 27/02/2008
'# Duplication de sociétés
'################################################
'

Public Sub _New()

  Dim hfil As File
  Dim Lig As String

  Music.Load(Start.Musique)
  Me.Center
  Utils.Observers(Me)

  Shell "cd " & User.Home & ""
  Shell "mysql -h " & Start.LocalSettings["/dbase/Host"] & " -u " & Utils.db.Login & " -p" & Utils.db.Password & " -e \"show databases;\" -B -s > ~/bases.txt" Wait
  HFil = Open User.Home & "/bases.txt" For Read
  Nbase.Clear
  While Not Eof(hFil)
    Line Input #hFil, Lig
    If Left$(lig, 6) = "Laurux" Then
      If Len(lig) > 6 Then Nbase.Add(Lig)
    Endif
  Wend
  S1.text = "Laurux" & Start.LocalSettings["/Soc"]
  S1.ReadOnly = True

End

Public Sub Button3_Click()

  Me.Close

End

Public Sub Button2_Click()

  Doc.Open("Dup")

End

Public Sub Button1_Click()

  Dim TabS1, TabS2 As String
  Dim $S1, $S2 As String
  Dim Existing As Boolean = False
  Dim elements As Variant

  $S1 = Right$(S1.Text, Len(S1.Text) - 6)
  $S2 = Right$(Nbase.Text, Len(Nbase.Text) - 6)
  If S1.Text = Nbase.Text Then
    Message.Error("Vous ne pouvez pas dupliquer une société sur elle-même !")
    Return
  Endif
  If Message.Question("Ok pour dupliquer la société " & $S1 & " vers la société " & $S2 & " ?", "Oui", "Non") = 1 Then
    Utils.db.Exec("set sql_mode = &1", "no_auto_value_on_zero")
    TabS1 = "Fiches_Parametres"
    TabS2 = "Fiches_Parametres"
    
    For Each elements In Utils.db.Databases
      If elements.name = Nbase.Text Then Existing = True
    Next
    If Existing Then
      If Message.Warning("La base " & $S2 & " existe .\nEtes vous sur de vouloir écraser son contenu?", "Non", "Oui") = 1 Then Return
    Else
      'on initialise le schema avec la base de défaut
      If Not LauruxConf.Createbase(Nbase.Text, False) Then Return
    Endif
    
    Me.mouse = Mouse.Wait
    Try Utils.db.Exec("drop table " & Nbase.Text & "." & TabS2)
    If Error Then
      If Existing Then Message.Error("Problème sur table " & TabS2 & " de la société " & $S2 & ".\nSuppression Impossible!")
    Endif
    Utils.db.Exec("Create table " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & "")
    Utils.db.Exec("UPdate  " & Nbase.Text & "." & Tabs2 & " SET  dnbon = &1, dnfac = &1, dncom = &2", "000000", "00000")
    Utils.db.Exec("UPdate  " & Nbase.Text & "." & Tabs2 & " SET  numecriture = &1,numecriture2 = &2", 0, 0)
    If Chk1.value = False Then Utils.db.Exec("UPdate  " & Nbase.Text & "." & Tabs2 & " SET  dnc = &1", "411000")
    If Chk2.value = False Then Utils.db.Exec("UPdate  " & Nbase.Text & "." & TabS2 & "  SET  dnf = &1", "401000")

    TabS1 = "Fiches_Tvaav"
    TabS2 = "Fiches_Tvaav"
    Try Utils.db.Exec("drop table " & Nbase.Text & "." & TabS2)
    If Error Then
      If Existing Then Message.Error("Problème sur table " & TabS2 & " de la société " & $S2 & ".\nSuppression Impossible!")
    Endif
    Utils.db.Exec("create table " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & "")
    
    TabS1 = "Fiches_Tvaac"
    TabS2 = "Fiches_Tvaac"
    Try Utils.db.Exec("drop table " & Nbase.Text & "." & TabS2)
    If Error Then
      If Existing Then Message.Error("Problème sur table " & TabS2 & " de la société " & $S2 & ".\nSuppression Impossible!")
    Endif
    Utils.db.Exec("create table " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & "")
    
    TabS1 = "Fiches_Journaux"
    TabS2 = "Fiches_Journaux"
    Try Utils.db.Exec("drop table " & Nbase.Text & "." & TabS2)
    If Error Then
      If Existing Then Message.Error("Problème sur table " & TabS2 & " de la société " & $S2 & ".\nSuppression Impossible!")
    Endif
    Utils.db.Exec("Create table " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & "")
    
    TabS1 = "Fiches_Echeances"
    TabS2 = "Fiches_Echeances"
    Try Utils.db.Exec("drop table " & Nbase.Text & "." & TabS2)
    If Error Then
      If Existing Then Message.Error("Problème sur table " & TabS2 & " de la société " & $S2 & ".\nSuppression Impossible!")
    Endif
    Utils.db.Exec("create table " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & "")
   
    TabS1 = "Fiches_Comptes"
    TabS2 = "Fiches_Comptes"
    'Pour les comptes c'est plus complex on garde les comptes clients/fournisseur de base si on ne les duplique pas explicitement
    'On duplique cependant tous les autres comptes 
    Utils.db.Exec("Delete From " & Nbase.Text & "." & TabS2 & " where ( Left(compte_cc, 3) <> &1 And Left(compte_cc, 3) <> &2 ) Or coll = &3", "411", "401", "1")
    If Chk1.value = True Then
      Utils.db.Exec("Delete From " & Nbase.Text & "." & TabS2 & " where Left(compte_cc, 3) = &1 And coll <> &2", "411", "1")
      Utils.db.Exec("Insert Into " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & " where Left(compte_cc, 3) = &1 And coll <> &2", "411", "1")
    Endif
    If Chk2.value = True Then
      Utils.db.Exec("Delete From " & Nbase.Text & "." & TabS2 & " where Left(compte_cc, 3) = &1 And coll <> &2", "401", "1")
      Utils.db.Exec("Insert Into " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & " where Left(compte_cc, 3) = &1 And coll <> &2", "401", "1")
    Endif
    Utils.db.Exec("Insert Into " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & " where ( Left(compte_cc, 3) <> &1 And Left(compte_cc, 3) <> &2 ) Or coll = &3", "411", "401", "1")
    Utils.db.Exec("UPdate  " & Nbase.Text & "." & TabS2 & "  SET  solde = &1, soldep = &2", 0, 0, 0)

    TabS1 = "Fiches_Txt_Relances"
    TabS2 = "Fiches_Txt_Relances"
    Try Utils.db.Exec("drop table " & Nbase.Text & "." & TabS2)
    If Error Then
      If Existing Then Message.Error("Problème sur table " & TabS2 & " de la société " & $S2 & ".\nSuppression Impossible!")
    Endif
    Utils.db.Exec("create table " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & "")
    
    TabS1 = "Fiches_Etiquettes"
    TabS2 = "Fiches_Etiquettes"
    Try Utils.db.Exec("drop table " & Nbase.Text & "." & TabS2)
    If Error Then
      If Existing Then Message.Error("Problème sur table " & TabS2 & " de la société " & $S2 & ".\nSuppression Impossible!")
    Endif
    Utils.db.Exec("Create table " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & "")
    
    TabS1 = "Fiches_Cpostaux"
    TabS2 = "Fiches_Cpostaux"
    Try Utils.db.Exec("drop table " & Nbase.Text & "." & TabS2)
    If Error Then
      If Existing Then Message.Error("Problème sur table " & TabS2 & " de la société " & $S2 & ".\nSuppression Impossible!")
    Endif
    Utils.db.Exec("Create table " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & "")

    TabS1 = "Fiches_Societes"
    TabS2 = "Fiches_Societes"
    Try Utils.db.Exec("drop table " & Nbase.Text & "." & TabS2)
    If Error Then
      If Existing Then Message.Error("Problème sur table " & TabS2 & " de la société " & $S2 & ".\nSuppression Impossible!")
    Endif
    Utils.db.Exec("Create table " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & "")
    Utils.db.Exec("UPdate  " & Nbase.Text & "." & TabS2 & "  SET  cd_sc = &1", $S2)

    If Chk1.value = True Then
      TabS1 = "Fiches_Cli"
      TabS2 = "Fiches_Cli"
      Try Utils.db.Exec("drop table " & Nbase.Text & "." & TabS2)
      If Error Then
        If Existing Then Message.Error("Problème sur table " & TabS2 & " de la société " & $S2 & ".\nSuppression Impossible!")
      Endif
      Utils.db.Exec("Create table " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & "")
    Endif

    If Chk1.value = True Then
      TabS1 = "Fiches_AdrlivC"
      TabS2 = "Fiches_AdrlivC"
      Try Utils.db.Exec("drop table " & Nbase.Text & "." & TabS2)
      If Error Then
        If Existing Then Message.Error("Problème sur table " & TabS2 & " de la société " & $S2 & ".\nSuppression Impossible!")
      Endif
      Utils.db.Exec("Create table " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & "")
    Endif

    If Chk1.value = True Then
      TabS1 = "Fiches_ContactC"
      TabS2 = "Fiches_ContactC"
      Try Utils.db.Exec("drop table " & Nbase.Text & "." & TabS2)
      If Error Then
        If Existing Then Message.Error("Problème sur table " & TabS2 & " de la société " & $S2 & ".\nSuppression Impossible!")
      Endif
      Utils.db.Exec("Create table " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & "")
    Endif

    If Chk2.value = True Then
      TabS1 = "Fiches_Four"
      TabS2 = "Fiches_Four"
      Try Utils.db.Exec("drop table " & Nbase.Text & "." & TabS2)
      If Error Then
        If Existing Then Message.Error("Problème sur table " & TabS2 & " de la société " & $S2 & ".\nSuppression Impossible!")
      Endif
      Utils.db.Exec("Create table " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & "")
    Endif

    If Chk2.value = True Then
      TabS1 = "Fiches_ContactF"
      TabS2 = "Fiches_ContactF"
      Try Utils.db.Exec("drop table " & Nbase.Text & "." & TabS2)
      If Error Then
        If Existing Then Message.Error("Problème sur table " & TabS2 & " de la société " & $S2 & ".\nSuppression Impossible!")
      Endif
      Utils.db.Exec("Create table " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & "")
    Endif

    If Chk3.value = True Then
      TabS1 = "Fiches_Fam"
      TabS2 = "Fiches_Fam"
      Try Utils.db.Exec("drop table " & Nbase.Text & "." & TabS2)
      If Error Then
        If Existing Then Message.Error("Problème sur table " & TabS2 & " de la société " & $S2 & ".\nSuppression Impossible!")
      Endif
      Utils.db.Exec("Create table " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & "")
    Endif

    If Chk4.value = True Then
      TabS1 = "Fiches_Art"
      TabS2 = "Fiches_Art"
      Try Utils.db.Exec("drop table " & Nbase.Text & "." & TabS2)
      If Error Then
        If Existing Then Message.Error("Problème sur table " & TabS2 & " de la société " & $S2 & ".\nSuppression Impossible!")
      Endif
      Utils.db.Exec("Create table " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & "")
      Utils.db.Exec("UPdate  " & Nbase.Text & "." & TabS2 & "  SET  art_qte = &1, art_com = &2, art_stkdep = &3, art_ddate = &4, art_datefbt = &5", 0, 0, 0, "", "")
      TabS1 = "Fiches_CdBarre"
      TabS2 = "Fiches_CdBarre"
      Try Utils.db.Exec("drop table " & Nbase.Text & "." & TabS2)
      If Error Then
        If Existing Then Message.Error("Problème sur table " & TabS2 & " de la société " & $S2 & ".\nSuppression Impossible!")
      Endif
      Utils.db.Exec("Create table " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & "")
    Endif

    If Chk5.value = True Then
      TabS1 = "Fiches_Commentaires"
      TabS2 = "Fiches_Commentaires"
      Try Utils.db.Exec("drop table " & Nbase.Text & "." & TabS2)
      If Error Then
        If Existing Then Message.Error("Problème sur table " & TabS2 & " de la société " & $S2 & ".\nSuppression Impossible!")
      Endif
      Utils.db.Exec("Create table " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & "")
    Endif

    If Chk6.value = True Then
      TabS1 = "Fiches_Mo"
      TabS2 = "Fiches_Mo"
      Try Utils.db.Exec("drop table " & Nbase.Text & "." & TabS2)
      If Error Then
        If Existing Then Message.Error("Problème sur table " & TabS2 & " de la société " & $S2 & ".\nSuppression Impossible!")
      Endif
      Utils.db.Exec("Create table " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & "")
    Endif

    If Chk6.value = True Then
      TabS1 = "Fiches_Txtmo"
      TabS2 = "Fiches_Txtmo"
      Try Utils.db.Exec("drop table " & Nbase.Text & "." & TabS2)
      If Error Then
        If Existing Then Message.Error("Problème sur table " & TabS2 & " de la société " & $S2 & ".\nSuppression Impossible!")
      Endif
      Utils.db.Exec("Create table " & Nbase.Text & "." & TabS2 & " SELECT * FROM " & S1.Text & "." & TabS1 & "")
    Endif

    Me.mouse = Mouse.Default
    Message.Warning("Transfert terminé !")
  Endif

End
